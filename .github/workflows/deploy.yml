name: Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Validate service account key and activate
        env:
          SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          # write SA JSON to a file from the secret without leaking it to logs
          mkdir -p "${HOME}/.gcloud"
          printf '%s' "$SA_KEY" > "${HOME}/.gcloud/key.json"
          chmod 600 "${HOME}/.gcloud/key.json"
          # export for subsequent steps
          echo "GOOGLE_APPLICATION_CREDENTIALS=${HOME}/.gcloud/key.json" >> $GITHUB_ENV
          # validate JSON without printing secrets (requires jq on runner)
          jq -e . "${HOME}/.gcloud/key.json" > /dev/null && echo "SA JSON OK" || (echo "SA JSON invalid" >&2; exit 1)
          # explicitly activate the service account to create ADC
          gcloud auth activate-service-account --key-file="${HOME}/.gcloud/key.json"
          gcloud auth list

      - name: Configure kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
          # pass the SA key directly to ensure credentials are available
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_REGION }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install nginx ingress controller (if missing)
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx || true
          helm repo update
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx --create-namespace \
            --set controller.service.type=LoadBalancer \
            --wait --timeout 5m
          echo "ingress-nginx installed; service status:"
          kubectl get svc -n ingress-nginx -o wide

      - name: Build and push container image to Artifact Registry
        env:
          IMAGE_TAG: ${{ github.sha }}
          AR_LOCATION: us
          AR_REPO: sample-workflows
        run: |
          # compute IMAGE_REPO here so AR_REPO env is available
          IMAGE_REPO="us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${AR_REPO}/sample-web-app"
          IMAGE="${IMAGE_REPO}:${IMAGE_TAG}"
          echo "Working directory contents:"
          ls -la
          echo "Building ${IMAGE}"
          docker build -t "${IMAGE}" .
          # configure docker to use gcloud credential helper for Artifact Registry
          gcloud auth configure-docker ${AR_LOCATION}-docker.pkg.dev --quiet
          echo "Pushing ${IMAGE}"
          docker push "${IMAGE}"

      - name: Create imagePullSecret in cluster (regcred)
        run: |
          echo "Creating/updating regcred for Artifact Registry"
          kubectl create secret docker-registry regcred \
            --docker-server=https://${AR_LOCATION}-docker.pkg.dev \
            --docker-username=_json_key \
            --docker-password="$(cat ${GOOGLE_APPLICATION_CREDENTIALS})" \
            --docker-email=ci@example.com -n default --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to GKE
        run: |
          AR_LOCATION="us"
          AR_REPO="sample-workflows"
          IMAGE_REPO="us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${AR_REPO}/sample-web-app"
          IMAGE_TAG="${{ github.sha }}"
          helm upgrade --install sample-web-app ./charts/sample-web-app \
            --namespace default \
            --values ./charts/sample-web-app/values.yaml \
            --set image.repository="${IMAGE_REPO}" \
            --set image.tag="${IMAGE_TAG}" \
            --set imagePullSecrets[0].name=regcred